
WARNING 0!
[IFDEF] FFMAIN  ABORT [THEN]

1 TO YDP_FL

$1000 VALUE FILE_OFFSET
$80000000 CONSTANT T-ORG
$8000  CONSTANT CODE-SIZE
$8000  CONSTANT DATA-SIZE
T-ORG CODE-SIZE + CONSTANT D-ORG


DBG_START FLOAD riscv\define.4th
DBG_STOP

HERE T-DP !

$80000  ALLOCATE THROW   DP !

HERE  TO MSTR_IMG
 CM_SET
 $0 ML,      \  adr start RAM
 $1000  T-ORG $1000 - CM_SEG: .ELF_CM_SEG
 CODE-SIZE  T-ORG CM_SEG: .TEXT_SEG	\   riscv  Forth area
 DATA-SIZE  D-ORG CM_SEG: .DATA_SEG
 $1000  $000000 CM_SEG: .ATR_SEG
 $1000  $1000 CM_SEG: .ELF_END_SEG
 0 M,  \ img end

.TEXT_SEG SEG_SET

 \ first pass

 S" riscv/hello.4" INCLUDED \ AL
 S" riscv/ns16550a.4" INCLUDED \ _AL
 S" riscv/vm.4" INCLUDED \ _AL
 S" riscv/utils.4" INCLUDED \ _AL
 S" riscv/system.4" INCLUDED \ _AL
 
 \ second pass
 
 .DATA_SEG SEG_SET
  HERE 3 + 3 ANDC CONSTANT _dataEnd
 D-ORG DP M!
 .TEXT_SEG SEG_SET T-ORG DP M!

 0:INIT 1:INIT 2:INIT 3:INIT 4:INIT 5:INIT
  0 TO TLINK
  0 TO TLAST
  
 
 S" riscv/hello.4" INCLUDED_AL
 S" riscv/ns16550a.4" INCLUDED_AL

 S" riscv/vm.4" INCLUDED_AL
 S" riscv/utils.4" INCLUDED_AL
 S" riscv/system.4" INCLUDED_AL
  HERE T-ORG - 3 + 4 ANDC CONSTANT T-SIZE
  
  HERE $FFF + $FFF ANDC DP ! \ $1000 align
  HERE FILE_OFFSET + T-ORG - .( C=) DUP H. TO FILE_OFFSET
  
.DATA_SEG SEG_SET

  HERE D-ORG - CONSTANT D-SIZE
  D-SIZE FILE_OFFSET + .( D=) DUP H. TO FILE_OFFSET
  
 .ATR_SEG SEG_SET
 S" riscv/elfatr.4" INCLUDED_AL
 .( E=) HERE DUP H. FILE_OFFSET + DUP H. CONSTANT H_FILE_OFFSET
\   $c8 1- iallot $77 C,

.ELF_CM_SEG  SEG_SET

 $7f c,  'E' c,  'L' c,  'F' c,
  1		c,	\ 4 
  1		c,	\ 5
  1		c,	\ 6
  0		c,	\ 7
  0		l,	\ 8
  0		l,	\ 0x0c
  2		w,	\ 0x10 object file type ET_EXEC
  $f3		w,	\ 0x12 architecture riscv
  1		l,	\ 0x14 object file version EV_CURRENT
  T-ORG	l,	\ 0x18 entry point virtual address
  $34		l,	\ 0x1c program header file offset
  H_FILE_OFFSET	l,	\ 0x20 section header file offset \ $AD18
  1		l,	\ 0x24 flags
  $34		w,	\ 0x28 ELF header size
  $20		w,	\ 0x2a program header table entry size
  3		w,	\ 0x2c program header table entry count (one pheader)
  $28		w,	\ 0x2e section header table entry size
  5		w,	\ 0x30 section header table entry count \ $C
  4		w,	\ 0x32 section header string table index \ $B

\ #pheaders
  0003	w,	\ 0x34 entry type PT_LOAD
  $7000	w,
  FILE_OFFSET	l,	\ 0x38 file offset
  0		l,	\ 0x3c vaddr
  0		l,	\ 0x40 paddr - where to put the bits
  $45		l,	\ 0x44 file size   - backpatched later
  0		l,	\ 0x48 memory size - backpatched later
  4		l,	\ 0x4c entry flags RWX
  1		l,	\ 0x50 alignment
  1		L,	\ 0x54 End of pheader
  $1000		L,	\ 0x58
  T-ORG	L,	\ 0x5c
  T-ORG	L,	\ 0x60
  T-SIZE	L,	\ 0x64
  T-SIZE	L,	\ 0x68
  5		L,	\ 0x6C
  $1000		L,	\ 0x70
  1		L,	\ 0x74
  $5000		L,	\ 0x78
  D-ORG	L,	\ 0x7C
  D-ORG	L,	\ 0x80
  D-SIZE	L,	\ 0x84
  D-SIZE	L,	\ 0x88
  6		L,	\ 0x8C
  $1000		L,	\ 0x90


  HERE $FFF + $FFF ANDC DP M! \ $1000 align

 .ELF_END_SEG  SEG_SET
 

COUNT_SEG_CLOSE
.( RR73=) .S MCR

 ' THERE?A TO THERE?

\EOF
https://riscv-non-isa.github.io/riscv-elf-psabi-doc/
